initSidebarItems({"enum":[["ErrorKind","A list specifying general categories of I/O error."]],"fn":[["split","Split a single value implementing `AsyncRead + AsyncWrite` into separate `AsyncRead` and `AsyncWrite` handles."],["stderr","Constructs a new handle to the standard error of the current process."],["stdin","Constructs a new handle to the standard input of the current process."],["stdout","Constructs a new handle to the standard output of the current process."]],"struct":[["BufReader","The `BufReader` struct adds buffering to any reader."],["BufWriter","Wraps a writer and buffers its output."],["Error","The error type for I/O operations of the [`Read`], [`Write`], [`Seek`], and associated traits."],["Stderr","A handle to the standard error stream of a process."],["Stdin","A handle to the standard input stream of a process."],["Stdout","A handle to the standard output stream of a process."]],"trait":[["AsyncBufRead","Read bytes asynchronously."],["AsyncBufReadExt","An extension trait which adds utility methods to `AsyncBufRead` types."],["AsyncRead","Read bytes asynchronously."],["AsyncReadExt","An extension trait which adds utility methods to `AsyncRead` types."],["AsyncWrite","Writes bytes asynchronously."],["AsyncWriteExt","An extension trait which adds utility methods to `AsyncWrite` types."]],"type":[["Result","A specialized `Result` type for I/O operations."]]});